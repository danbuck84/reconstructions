{"version":3,"sources":["components/Navigation.js","logic/moves.js","components/CubeImage.js","logic/url-utils.js","components/ReconstructionForm.js","components/ReconstructionEditor.js","components/ReconstructionStatistics.js","logic/utils.js","components/ReconstructionViewer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","style","flexGrow","Link","to","IconButton_default","component","href","target","src","alt","Component","METRICS","stm","singleLayer","doubleLayer","slice","rotation","etm","htm","qtm","PATTERN_BY_MOVE_TYPE","MOVES_REGEXP","stringToMoves","string","replace","toLowerCase","match","shrink","join","prettify","countMoves","moves","Object","entries","reduce","countByMetric","_ref","_ref2","slicedToArray","metric","metricData","objectSpread","defineProperty","count","_ref3","_ref4","moveType","_ref4$","singleMoveValue","doubleMoveValue","filter","move","imageUrl","scramble","solution","params","URLSearchParams","fmt","size","bg","pzl","alg","sch","r","concat","toString","CubeImage","reconstructionToParams","reconstruction","reconstructionFromParams","title","get","method","time","parseFloat","editReconstructionPath","ReconstructionForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","name","value","onChange","handleTimeInputChange","handleSolutionInputChange","start","selectionStart","length","solutionInputRef","current","selectionEnd","handleOptionChange","_event$target2","checked","setState","state","autoFormatting","React","createRef","_this$props$reconstru","analyzeSolution","steps","solved","formattedSolution","map","step","autoComplete","TextField_default","label","margin","fullWidth","FormControl_default","InputLabel_default","Select_default","MenuItem_default","inputProps","spellCheck","multiline","inputRef","FormControlLabel_default","control","Checkbox_default","Button_default","disabled","ReconstructionEditor","handleReconstructionChange","callback","location","search","Grid_default","container","item","xs","md","textAlign","components_CubeImage","ReconstructionForm_ReconstructionForm","ReconstructionStatistics","handleTabChange","tabIndex","metrics","fn","_this2","_this$props","stepsWithMoveCount","moveCount","totalMoveCount","x","overflowX","Tabs_default","Tab_default","Table_default","TableHead_default","TableRow_default","TableCell_default","key","toUpperCase","rel","TableBody_default","fontWeight","toFixed","ReconstructionViewer","url","window","login","apiKey","longUrl","fetch","then","response","json","status_code","data","Promise","reject","shortenUrl","_this$state","formattedSolutionWithData","animationParams","setup","type","animationUrl","spacing","Paper_default","padding","Divider_default","opacity","Tooltip_default","Icon_default","lib","text","ReconstructionStatistics_ReconstructionStatistics","App","HashRouter","CssBaseline_default","Navigation_Navigation","Route","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.be46a2f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Reconstructions</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/reconstructions\" target=\"_blank\">\n            <img src=\"https://png.icons8.com/ios-glyphs/32/ffffff/github.png\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","const METRICS = {\n  stm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [1, 1], rotation: [0, 0] },\n  etm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [1, 1], rotation: [1, 1] },\n  htm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [2, 2], rotation: [0, 0] },\n  qtm: { singleLayer: [1, 2], doubleLayer: [1, 2], slice: [2, 4], rotation: [0, 0] }\n};\n\nconst PATTERN_BY_MOVE_TYPE = {\n  singleLayer: /^[RLUDFB]2?'?$/,\n  doubleLayer: /^([rludfb]|[RLUDFB]w)2?'?$/,\n  slice: /^[MSE]2?'?$/,\n  rotation: /^[xyz]2?'?$/\n};\n\nconst MOVES_REGEXP = /([RLUDFB]w?|[rludfbMSExyz])2?'?/g;\n\nexport const stringToMoves = string => {\n  if (!string) return [];\n  const preformatted = string\n    .replace(/\\s+/g, '')\n    .replace(/`/g, \"'\")\n    .replace(/[XYZ]/g, rotation => rotation.toLowerCase());\n  return preformatted.match(MOVES_REGEXP) || [];\n};\n\nexport const shrink = string =>\n  stringToMoves(string).join('');\n\nexport const prettify = string =>\n  stringToMoves(string).join(' ');\n\nexport const countMoves = moves =>\n  Object.entries(METRICS).reduce((countByMetric, [metric, metricData]) => ({\n    ...countByMetric,\n    [metric]: Object.entries(metricData).reduce((count, [moveType, [singleMoveValue, doubleMoveValue]]) =>\n      moves\n        .filter(move => move.match(PATTERN_BY_MOVE_TYPE[moveType]))\n        .reduce((count, move) => count + (move.match(/2'?$/) ? doubleMoveValue : singleMoveValue), count)\n    , 0)\n  }), {});\n","import React from 'react';\nimport { shrink } from '../logic/moves';\n\nconst IMAGE_BASE_URL = 'http://cube.crider.co.uk/visualcube.php';\n\nconst imageUrl = (scramble, solution) => {\n  const params = new URLSearchParams({\n    fmt: 'svg',\n    size: 300,\n    bg: 't',\n    pzl: 3,\n    alg: shrink(scramble + solution),\n    sch: 'wrgyob',\n    r: 'y34x-34'\n  });\n\n  return `${IMAGE_BASE_URL}?${params.toString()}`;\n};\n\nconst CubeImage = ({ scramble, solution }) => (\n  <img src={imageUrl(scramble, solution)} alt=\"Failed to load\" />\n);\n\nexport default CubeImage;\n","import { shrink } from './moves';\n\nexport const reconstructionToParams = reconstruction =>\n  new URLSearchParams({\n    ...reconstruction,\n    scramble: shrink(reconstruction.scramble),\n    solution: shrink(reconstruction.solution)\n  });\n\nexport const reconstructionFromParams = params => ({\n  title: params.get('title') || '',\n  method: params.get('method') || 'cfop',\n  time: (params.get('time') && parseFloat(params.get('time'))) || '',\n  scramble: params.get('scramble') || '',\n  solution: params.get('solution') || ''\n});\n\nexport const reconstructionPath = reconstruction =>\n  '/show?' + reconstructionToParams(reconstruction).toString();\n\nexport const editReconstructionPath = reconstruction =>\n  '/?' + reconstructionToParams(reconstruction).toString();\n\nexport const shortenUrl = url => {\n  const params = new URLSearchParams({\n    login: 'o_214kbfp0ik',\n    apiKey: 'R_00aee698807d4b799529bec2d82d0356',\n    longUrl: url\n  });\n  return fetch(`https://api-ssl.bitly.com/v3/shorten?${params.toString()}`)\n    .then(response => response.json())\n    .then(json => json.status_code === 200 ? json.data.url : Promise.reject(json));\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField'\n\nimport { analyzeSolution } from 'solution-analyzer';\nimport { prettify } from '../logic/moves';\nimport { reconstructionPath } from '../logic/url-utils';\n\nexport default class ReconstructionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoFormatting: true\n    };\n    this.solutionInputRef = React.createRef();\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.props.onChange({ ...this.props.reconstruction, [name]: value });\n  };\n\n  handleTimeInputChange = event => {\n    const { value } = event.target;\n    const formatTime = string =>\n      string.replace(',', '.').replace(/[^\\d.]/, '');\n    this.props.onChange({ ...this.props.reconstruction, time: formatTime(value) });\n  };\n\n  handleSolutionInputChange = event => {\n    const { value } = event.target;\n    const start = prettify(value.slice(0, event.target.selectionStart)).length;\n    this.props.onChange({ ...this.props.reconstruction, solution: value }, () => {\n      this.solutionInputRef.current.selectionStart = start;\n      this.solutionInputRef.current.selectionEnd = start;\n    });\n  };\n\n  handleOptionChange = event => {\n    const { name, checked } = event.target;\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    const { title, method, time, scramble, solution } = this.props.reconstruction;\n    const { autoFormatting } = this.state;\n\n    const { steps, solved } = scramble && solution\n      ? analyzeSolution(scramble, solution, method)\n      : { steps: [], solved: true };\n    const formattedSolution = steps.map(step => step.moves.join(' ')).join('\\n');\n\n    return (\n      <form autoComplete=\"off\">\n        <TextField\n          label=\"Title\"\n          name=\"title\"\n          margin=\"normal\"\n          fullWidth\n          value={title}\n          onChange={this.handleInputChange}\n        />\n        <FormControl margin=\"normal\">\n          <InputLabel>Method</InputLabel>\n          <Select\n            name=\"method\"\n            value={method}\n            onChange={this.handleInputChange}\n          >\n            <MenuItem value=\"cfop\">CFOP</MenuItem>\n            <MenuItem value=\"roux\">Roux</MenuItem>\n            <MenuItem value=\"zz\">ZZ</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          label=\"Time\"\n          name=\"time\"\n          margin=\"normal\"\n          value={time}\n          onChange={this.handleTimeInputChange}\n        />\n        <TextField\n          label=\"Scramble\"\n          name=\"scramble\"\n          margin=\"normal\"\n          value={prettify(scramble)}\n          onChange={this.handleInputChange}\n          fullWidth\n          inputProps={{ spellCheck: false }}\n        />\n        <TextField\n          label=\"Solution\"\n          name=\"solution\"\n          margin=\"normal\"\n          value={autoFormatting ? formattedSolution : solution}\n          onChange={this.handleSolutionInputChange}\n          fullWidth\n          multiline\n          inputProps={{ spellCheck: false }}\n          inputRef={this.solutionInputRef}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              name=\"autoFormatting\"\n              checked={autoFormatting}\n              onChange={this.handleOptionChange}\n            />\n          }\n          label=\"Use intelligent formatting\"\n        />\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            component={Link}\n            to={reconstructionPath(this.props.reconstruction)}\n            disabled={!scramble || !solution || !solved}\n          >\n            Done\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\n\nimport CubeImage from './CubeImage';\nimport ReconstructionForm from './ReconstructionForm';\n\nimport { reconstructionFromParams } from '../logic/url-utils';\n\nexport default class ReconstructionEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reconstruction: reconstructionFromParams(new URLSearchParams(this.props.location.search))\n    };\n  }\n\n  handleReconstructionChange = (reconstruction, callback) => {\n    this.setState({ reconstruction }, callback);\n  };\n\n  render() {\n    const { reconstruction } = this.state;\n\n    return (\n      <Grid container>\n        <Grid item xs={12} md={4} style={{ textAlign: 'center' }}>\n          <CubeImage scramble={reconstruction.scramble} solution={reconstruction.solution} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h5\">Reconstruction</Typography>\n          <ReconstructionForm\n            reconstruction={reconstruction}\n            onChange={this.handleReconstructionChange}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { countMoves } from '../logic/moves';\nimport { flatMap } from '../logic/utils';\n\nexport default class ReconstructionStatistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabIndex: 0\n    };\n    this.metrics = ['stm', 'etm', 'htm', 'qtm'];\n  }\n\n  handleTabChange = (event, tabIndex) => {\n    this.setState({ tabIndex })\n  };\n\n  render() {\n    const { tabIndex } = this.state;\n    const { steps,  time } = this.props;\n\n    const stepsWithMoveCount = steps\n      .filter(step => step.label !== 'inspection')\n      .map(step => ({ ...step, moveCount: countMoves(step.moves) }))\n    const totalMoveCount = countMoves(flatMap(stepsWithMoveCount, step => step.moves));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Tabs value={tabIndex} onChange={this.handleTabChange}>\n          <Tab label=\"Move count\" />\n          {time && <Tab label=\"TPS\" />}\n        </Tabs>\n        {tabIndex === 0 && (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Step</TableCell>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    <a href={'https://www.speedsolving.com/wiki/index.php/' + metric.toUpperCase()} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {metric.toUpperCase()}\n                    </a>\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {stepsWithMoveCount.map(({ moves, label, moveCount }) =>\n                <TableRow key={label}>\n                  <TableCell>{label}</TableCell>\n                  {this.metrics.map(metric =>\n                    <TableCell key={metric}>{moveCount[metric]}</TableCell>\n                  )}\n                </TableRow>\n              )}\n              <TableRow>\n                <TableCell style={{ fontWeight: 'bold' }}>Total</TableCell>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric} style={{ fontWeight: 'bold' }}>\n                    {totalMoveCount[metric]}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableBody>\n          </Table>\n        )}\n        {tabIndex === 1 && (\n          <Table>\n            <TableHead>\n              <TableRow>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    {metric.replace('tm', 'tps').toUpperCase()}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    {(totalMoveCount[metric] / time).toFixed(2)}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableBody>\n          </Table>\n        )}\n      </div>\n    );\n  }\n}\n","export const flatMap = (arr, fn) =>\n  arr.reduce((xs, x) => xs.concat(fn(x)), []);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ReconstructionStatistics from './ReconstructionStatistics';\n\nimport { analyzeSolution } from 'solution-analyzer';\nimport { prettify } from '../logic/moves';\nimport { reconstructionFromParams, editReconstructionPath, shortenUrl } from '../logic/url-utils';\n\nexport default class ReconstructionViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reconstruction: reconstructionFromParams(new URLSearchParams(this.props.location.search)),\n      url: window.location.href\n    };\n  }\n\n  componentDidMount() {\n    shortenUrl(window.location.href).then(url => this.setState({ url }));\n  }\n\n  render() {\n    const { url, reconstruction } = this.state;\n    const { title, time, scramble, solution, method } = reconstruction;\n\n    const { steps } = analyzeSolution(scramble, solution, method);\n\n    const formattedSolution = steps.map(step => `${step.moves.join(' ')} // ${step.label}`).join('\\n');\n    const formattedSolutionWithData = [\n      title ? title : '',\n      time ? `Time: ${time}` : '',\n      `Scramble: ${prettify(scramble)}\\n`,\n      formattedSolution\n    ].join('\\n');\n\n    const animationParams = new URLSearchParams({\n      setup: prettify(scramble),\n      alg: formattedSolution,\n      title: title || 'Reconstruction',\n      type: 'reconstruction'\n    });\n    const animationUrl = `https://alg.cubing.net/?${animationParams.toString()}`;\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ padding: 16 }}>\n            <Typography variant=\"h5\">Reconstruction</Typography>\n            {title && <Typography variant=\"subtitle1\">{title}</Typography>}\n            {time && <Typography variant=\"subtitle1\">Time: {time.toFixed(2)}</Typography>}\n            <Typography variant=\"subtitle1\">Scramble: {prettify(scramble)}</Typography>\n            <Divider />\n            <Typography variant=\"subtitle1\">\n              {steps.map(step =>\n                <p key={step.label} style={{ margin: 0 }}>\n                  <span>{step.moves.join(' ')}</span>\n                  <span style={{ opacity: 0.38 }}>{` // ${step.label}`}</span>\n                </p>\n              )}\n            </Typography>\n            <Divider />\n            <div>\n              <Tooltip title=\"See animation\">\n                <IconButton href={animationUrl} target=\"_blank\">\n                  <Icon>movie</Icon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Copy URL\">\n                <CopyToClipboard text={url}>\n                  <IconButton>\n                    <Icon>link</Icon>\n                  </IconButton>\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"Copy solution\">\n                <CopyToClipboard text={formattedSolutionWithData}>\n                  <IconButton>\n                    <Icon>content_copy</Icon>\n                  </IconButton>\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"Edit\">\n                <IconButton component={Link} to={editReconstructionPath(reconstruction)}>\n                  <Icon>mode_edit</Icon>\n                </IconButton>\n              </Tooltip>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ padding: 16 }}>\n            <Typography variant=\"h5\">Statistics</Typography>\n            <ReconstructionStatistics steps={steps} time={time} />\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Navigation from './Navigation';\nimport ReconstructionEditor from './ReconstructionEditor';\nimport ReconstructionViewer from './ReconstructionViewer';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <CssBaseline />\n          <Navigation />\n          <div style={{ padding: 16 }}>\n            <Route exact path=\"/\" component={ReconstructionEditor} />\n            <Route path=\"/show\" component={ReconstructionViewer} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}