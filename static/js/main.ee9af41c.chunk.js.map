{"version":3,"sources":["components/Navigation.js","logic/moves.js","components/CubeImage.js","logic/url-utils.js","components/ReconstructionForm.js","components/ReconstructionEditor.js","components/ReconstructionStatistics.js","logic/utils.js","components/ReconstructionViewer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","style","flexGrow","Link","to","IconButton_default","component","href","target","src","alt","Component","METRICS","stm","singleLayer","doubleLayer","slice","rotation","etm","htm","qtm","PATTERN_BY_MOVE_TYPE","MOVES_REGEXP","stringToMoves","string","replace","match","shrink","join","prettify","countMoves","moves","Object","entries","reduce","countByMetric","_ref","_ref2","slicedToArray","metric","metricData","objectSpread","defineProperty","count","_ref3","_ref4","moveType","_ref4$","singleMoveValue","doubleMoveValue","filter","move","CubeImage","scramble","solution","params","URLSearchParams","fmt","size","bg","pzl","alg","sch","r","concat","toString","imageUrl","reconstructionToParams","reconstruction","reconstructionFromParams","title","get","method","time","parseFloat","ReconstructionForm","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleInputChange","event","_event$target","name","value","onChange","handleOptionChange","_event$target2","checked","setState","state","autoFormatting","_this$props$reconstru","analyzeSolution","steps","solved","formattedSolution","map","step","autoComplete","TextField_default","label","margin","fullWidth","FormControl_default","InputLabel_default","Select_default","MenuItem_default","inputProps","spellCheck","multiline","FormControlLabel_default","control","Checkbox_default","Button_default","disabled","ReconstructionEditor","handleReconstructionChange","location","search","Grid_default","container","item","xs","md","textAlign","components_CubeImage","ReconstructionForm_ReconstructionForm","ReconstructionStatistics","handleTabChange","tabIndex","metrics","fn","_this2","_this$props","stepsWithMoveCount","moveCount","totalMoveCount","x","overflowX","Tabs_default","Tab_default","Table_default","TableHead_default","TableRow_default","TableCell_default","key","toUpperCase","rel","TableBody_default","fontWeight","toFixed","ReconstructionViewer","url","window","login","apiKey","longUrl","fetch","then","response","json","status_code","data","Promise","reject","shortenUrl","_this$state","formattedSolutionWithData","animationParams","setup","type","animationUrl","spacing","Paper_default","padding","Divider_default","opacity","Tooltip_default","Icon_default","lib","text","editReconstructionPath","ReconstructionStatistics_ReconstructionStatistics","App","HashRouter","CssBaseline_default","Navigation_Navigation","Route","exact","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ee9af41c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Link } from 'react-router-dom';\n\nexport default class Navigation extends Component {\n  render() {\n    return (\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" style={{ flexGrow: 1 }}>\n            <Link to=\"/\">Reconstructions</Link>\n          </Typography>\n          <IconButton component=\"a\" href=\"https://github.com/jonatanklosko/reconstructions\" target=\"_blank\">\n            <img src=\"https://png.icons8.com/ios-glyphs/32/ffffff/github.png\" alt=\"GitHub\" />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n","const METRICS = {\n  stm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [1, 1], rotation: [0, 0] },\n  etm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [1, 1], rotation: [1, 1] },\n  htm: { singleLayer: [1, 1], doubleLayer: [1, 1], slice: [2, 2], rotation: [0, 0] },\n  qtm: { singleLayer: [1, 2], doubleLayer: [1, 2], slice: [2, 4], rotation: [0, 0] }\n};\n\nconst PATTERN_BY_MOVE_TYPE = {\n  singleLayer: /^[RLUDFB]2?'?$/,\n  doubleLayer: /^([rludfb]|[RLUDFB]w)2?'?$/,\n  slice: /^[MSE]2?'?$/,\n  rotation: /^[xyz]2?'?$/\n};\n\nconst MOVES_REGEXP = /([RLUDFB]w?|[rludfbMSExyz])2?'?/g;\n\nexport const stringToMoves = string =>\n  (string && string.replace(/\\s+/g, '').match(MOVES_REGEXP)) || [];\n\nexport const shrink = string =>\n  stringToMoves(string).join('');\n\nexport const prettify = string =>\n  stringToMoves(string).join(' ');\n\nexport const countMoves = moves =>\n  Object.entries(METRICS).reduce((countByMetric, [metric, metricData]) => ({\n    ...countByMetric,\n    [metric]: Object.entries(metricData).reduce((count, [moveType, [singleMoveValue, doubleMoveValue]]) =>\n      moves\n        .filter(move => move.match(PATTERN_BY_MOVE_TYPE[moveType]))\n        .reduce((count, move) => count + (move.match(/2'?$/) ? doubleMoveValue : singleMoveValue), count)\n    , 0)\n  }), {});\n","import React from 'react';\nimport { shrink } from '../logic/moves';\n\nconst IMAGE_BASE_URL = 'http://cube.crider.co.uk/visualcube.php';\n\nconst imageUrl = (scramble, solution) => {\n  const params = new URLSearchParams({\n    fmt: 'svg',\n    size: 300,\n    bg: 't',\n    pzl: 3,\n    alg: shrink(scramble + solution),\n    sch: 'wrgyob',\n    r: 'y34x-34'\n  });\n\n  return `${IMAGE_BASE_URL}?${params.toString()}`;\n};\n\nconst CubeImage = ({ scramble, solution }) => (\n  <img src={imageUrl(scramble, solution)} alt=\"Failed to load\" />\n);\n\nexport default CubeImage;\n","import { shrink } from './moves';\n\nexport const reconstructionToParams = reconstruction =>\n  new URLSearchParams({\n    ...reconstruction,\n    scramble: shrink(reconstruction.scramble),\n    solution: shrink(reconstruction.solution)\n  });\n\nexport const reconstructionFromParams = params => ({\n  title: params.get('title') || '',\n  method: params.get('method') || 'cfop',\n  time: (params.get('time') && parseFloat(params.get('time'))) || '',\n  scramble: params.get('scramble') || '',\n  solution: params.get('solution') || ''\n});\n\nexport const reconstructionPath = reconstruction =>\n  '/show?' + reconstructionToParams(reconstruction).toString();\n\nexport const editReconstructionPath = reconstruction =>\n  '/?' + reconstructionToParams(reconstruction).toString();\n\nexport const shortenUrl = url => {\n  const params = new URLSearchParams({\n    login: 'o_214kbfp0ik',\n    apiKey: 'R_00aee698807d4b799529bec2d82d0356',\n    longUrl: url\n  });\n  return fetch(`https://api-ssl.bitly.com/v3/shorten?${params.toString()}`)\n    .then(response => response.json())\n    .then(json => json.status_code === 200 ? json.data.url : Promise.reject(json));\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField'\n\nimport { analyzeSolution } from 'solution-analyzer';\nimport { prettify } from '../logic/moves';\nimport { reconstructionPath } from '../logic/url-utils';\n\nexport default class ReconstructionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoFormatting: true\n    };\n  }\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.props.onChange({ ...this.props.reconstruction, [name]: value });\n  };\n\n  handleOptionChange = event => {\n    const { name, checked } = event.target;\n    this.setState({ [name]: checked });\n  };\n\n  render() {\n    const { title, method, time, scramble, solution } = this.props.reconstruction;\n    const { autoFormatting } = this.state;\n\n    const { steps, solved } = scramble && solution\n      ? analyzeSolution(scramble, solution, method)\n      : { steps: [], solved: true };\n    const formattedSolution = steps.map(step => step.moves.join(' ')).join('\\n');\n\n    return (\n      <form autoComplete=\"off\">\n        <TextField\n          label=\"Title\"\n          name=\"title\"\n          margin=\"normal\"\n          fullWidth\n          value={title}\n          onChange={this.handleInputChange}\n        />\n        <FormControl margin=\"normal\">\n          <InputLabel>Method</InputLabel>\n          <Select\n            name=\"method\"\n            value={method}\n            onChange={this.handleInputChange}\n          >\n            <MenuItem value=\"cfop\">CFOP</MenuItem>\n            <MenuItem value=\"roux\">Roux</MenuItem>\n            <MenuItem value=\"zz\">ZZ</MenuItem>\n          </Select>\n        </FormControl>\n        <TextField\n          label=\"Time\"\n          name=\"time\"\n          margin=\"normal\"\n          value={time}\n          onChange={this.handleInputChange}\n        />\n        <TextField\n          label=\"Scramble\"\n          name=\"scramble\"\n          margin=\"normal\"\n          value={prettify(scramble)}\n          onChange={this.handleInputChange}\n          fullWidth\n          inputProps={{ spellCheck: false }}\n        />\n        <TextField\n          label=\"Solution\"\n          name=\"solution\"\n          margin=\"normal\"\n          value={autoFormatting ? formattedSolution : solution}\n          onChange={this.handleInputChange}\n          fullWidth\n          multiline\n          inputProps={{ spellCheck: false }}\n        />\n        <FormControlLabel\n          control={\n            <Checkbox\n              name=\"autoFormatting\"\n              checked={autoFormatting}\n              onChange={this.handleOptionChange}\n            />\n          }\n          label=\"Use intelligent formatting\"\n        />\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            component={Link}\n            to={reconstructionPath(this.props.reconstruction)}\n            disabled={!scramble || !solution || !solved}\n          >\n            Done\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'\n\nimport CubeImage from './CubeImage';\nimport ReconstructionForm from './ReconstructionForm';\n\nimport { reconstructionFromParams } from '../logic/url-utils';\n\nexport default class ReconstructionEditor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reconstruction: reconstructionFromParams(new URLSearchParams(this.props.location.search))\n    };\n  }\n\n  handleReconstructionChange = reconstruction => {\n    this.setState({ reconstruction });\n  };\n\n  render() {\n    const { reconstruction } = this.state;\n\n    return (\n      <Grid container>\n        <Grid item xs={12} md={4} style={{ textAlign: 'center' }}>\n          <CubeImage scramble={reconstruction.scramble} solution={reconstruction.solution} />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h5\">Reconstruction</Typography>\n          <ReconstructionForm\n            reconstruction={reconstruction}\n            onChange={this.handleReconstructionChange}\n          />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { countMoves } from '../logic/moves';\nimport { flatMap } from '../logic/utils';\n\nexport default class ReconstructionStatistics extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabIndex: 0\n    };\n    this.metrics = ['stm', 'etm', 'htm', 'qtm'];\n  }\n\n  handleTabChange = (event, tabIndex) => {\n    this.setState({ tabIndex })\n  };\n\n  render() {\n    const { tabIndex } = this.state;\n    const { steps,  time } = this.props;\n\n    const stepsWithMoveCount = steps\n      .filter(step => step.label !== 'inspection')\n      .map(step => ({ ...step, moveCount: countMoves(step.moves) }))\n    const totalMoveCount = countMoves(flatMap(stepsWithMoveCount, step => step.moves));\n\n    return (\n      <div style={{ overflowX: 'auto' }}>\n        <Tabs value={tabIndex} onChange={this.handleTabChange}>\n          <Tab label=\"Move count\" />\n          {time && <Tab label=\"TPS\" />}\n        </Tabs>\n        {tabIndex === 0 && (\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Step</TableCell>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    <a href={'https://www.speedsolving.com/wiki/index.php/' + metric.toUpperCase()} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {metric.toUpperCase()}\n                    </a>\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {stepsWithMoveCount.map(({ moves, label, moveCount }) =>\n                <TableRow key={label}>\n                  <TableCell>{label}</TableCell>\n                  {this.metrics.map(metric =>\n                    <TableCell key={metric}>{moveCount[metric]}</TableCell>\n                  )}\n                </TableRow>\n              )}\n              <TableRow>\n                <TableCell style={{ fontWeight: 'bold' }}>Total</TableCell>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric} style={{ fontWeight: 'bold' }}>\n                    {totalMoveCount[metric]}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableBody>\n          </Table>\n        )}\n        {tabIndex === 1 && (\n          <Table>\n            <TableHead>\n              <TableRow>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    {metric.replace('tm', 'tps').toUpperCase()}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow>\n                {this.metrics.map(metric =>\n                  <TableCell key={metric}>\n                    {(totalMoveCount[metric] / time).toFixed(2)}\n                  </TableCell>\n                )}\n              </TableRow>\n            </TableBody>\n          </Table>\n        )}\n      </div>\n    );\n  }\n}\n","export const flatMap = (arr, fn) =>\n  arr.reduce((xs, x) => xs.concat(fn(x)), []);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ReconstructionStatistics from './ReconstructionStatistics';\n\nimport { analyzeSolution } from 'solution-analyzer';\nimport { prettify } from '../logic/moves';\nimport { reconstructionFromParams, editReconstructionPath, shortenUrl } from '../logic/url-utils';\n\nexport default class ReconstructionViewer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      reconstruction: reconstructionFromParams(new URLSearchParams(this.props.location.search)),\n      url: window.location.href\n    };\n  }\n\n  componentDidMount() {\n    shortenUrl(window.location.href).then(url => this.setState({ url }));\n  }\n\n  render() {\n    const { url, reconstruction } = this.state;\n    const { title, time, scramble, solution, method } = reconstruction;\n\n    const { steps } = analyzeSolution(scramble, solution, method);\n\n    const formattedSolution = steps.map(step => `${step.moves.join(' ')} // ${step.label}`).join('\\n');\n    const formattedSolutionWithData = [\n      title ? title : '',\n      time ? `Time: ${time}` : '',\n      `Scramble: ${prettify(scramble)}\\n`,\n      formattedSolution\n    ].join('\\n');\n\n    const animationParams = new URLSearchParams({\n      setup: prettify(scramble),\n      alg: formattedSolution,\n      title: title || 'Reconstruction',\n      type: 'reconstruction'\n    });\n    const animationUrl = `https://alg.cubing.net/?${animationParams.toString()}`;\n\n    return (\n      <Grid container spacing={16}>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ padding: 16 }}>\n            <Typography variant=\"h5\">Reconstruction</Typography>\n            {title && <Typography variant=\"subtitle1\">{title}</Typography>}\n            {time && <Typography variant=\"subtitle1\">Time: {time.toFixed(2)}</Typography>}\n            <Typography variant=\"subtitle1\">Scramble: {prettify(scramble)}</Typography>\n            <Divider />\n            <Typography variant=\"subtitle1\">\n              {steps.map(step =>\n                <p key={step.label} style={{ margin: 0 }}>\n                  <span>{step.moves.join(' ')}</span>\n                  <span style={{ opacity: 0.38 }}>{` // ${step.label}`}</span>\n                </p>\n              )}\n            </Typography>\n            <Divider />\n            <div>\n              <Tooltip title=\"See animation\">\n                <IconButton href={animationUrl} target=\"_blank\">\n                  <Icon>movie</Icon>\n                </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Copy URL\">\n                <CopyToClipboard text={url}>\n                  <IconButton>\n                    <Icon>link</Icon>\n                  </IconButton>\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"Copy solution\">\n                <CopyToClipboard text={formattedSolutionWithData}>\n                  <IconButton>\n                    <Icon>content_copy</Icon>\n                  </IconButton>\n                </CopyToClipboard>\n              </Tooltip>\n              <Tooltip title=\"Edit\">\n                <IconButton component={Link} to={editReconstructionPath(reconstruction)}>\n                  <Icon>mode_edit</Icon>\n                </IconButton>\n              </Tooltip>\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper style={{ padding: 16 }}>\n            <Typography variant=\"h5\">Statistics</Typography>\n            <ReconstructionStatistics steps={steps} time={time} />\n          </Paper>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Navigation from './Navigation';\nimport ReconstructionEditor from './ReconstructionEditor';\nimport ReconstructionViewer from './ReconstructionViewer';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <CssBaseline />\n          <Navigation />\n          <div style={{ padding: 16 }}>\n            <Route exact path=\"/\" component={ReconstructionEditor} />\n            <Route path=\"/show\" component={ReconstructionViewer} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}